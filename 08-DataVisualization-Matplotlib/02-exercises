# Exercises
# Follow the instructions to recreate the plots using this data:

## Data

import numpy as np

x = np.arange(0, 100)
y = x * 2
z = x ** 2

# ** Import matplotlib.pyplot as plt and set %matplotlib inline if you are using the jupyter notebook.

import matplotlib.pyplot as plt

# What command do you use if you aren't using the jupyter notebook?**
# The command is: plt.show()


# Exercise 1
# ** Follow along with these steps: **
#
# ** Create a figure object called fig using plt.figure() **
# ** Use add_axes to add an axis to the figure canvas at [0,0,1,1]. Call this new axis ax. **
# ** Plot (x,y) on that axes and set the labels and titles to match the plot below:**

fig = plt.figure()
# ax = fig.add_axes([0.1, 0.1, 0.8, 0.8])
ax = fig.add_axes([0, 0, 1, 1])
ax.plot(x, y)

ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_title('title')

plt.show()

# Exercise 2
# ** Create a figure object and put two axes on it, ax1 and ax2. Located at [0,0,1,1] and [0.2,0.5,.2,.2] respectively.**


fig2 = plt.figure()

# ax1 = fig2.add_axes([0.1, 0.1, 0.8, 0.8])
ax1 = fig2.add_axes([0, 0, 1, 1])
ax2 = fig2.add_axes([0.2, 0.5, .2, .2])

ax1.set_xlabel('x')
ax1.set_ylabel('y')

ax2.set_xlabel('x')
ax2.set_ylabel('y')

# ** Now plot (x,y) on both axes. And call your figure object to show it.**

ax1.plot(x, y)
ax2.plot(x, y)
plt.show()

# Exercise 3
# ** Create the plot below by adding two axes to a figure object at [0,0,1,1] and [0.2,0.5,.4,.4]**

fig3 = plt.figure()
ax3_1 = fig3.add_axes([0, 0, 1, 1])
ax3_1.set_xlabel('x')
ax3_1.set_ylabel('z')

ax3_2 = fig3.add_axes([0.2, 0.5, .4, .4])
ax3_2.set_xlabel('x')
ax3_2.set_ylabel('y')
ax3_2.set_title('zoom')

ax3_1.plot(x, z)
ax3_2.plot(x[20:22], y[20:22])
plt.show()

# Exercise 4
# ** Use plt.subplots(nrows=1, ncols=2) to create the plot below.**

fig, axes = plt.subplots(nrows=1, ncols=2)

# ** Now plot (x,y) and (x,z) on the axes. Play around with the linewidth and style**

axes[0].plot(x, y, color='blue', lw=3, ls='--')
axes[1].plot(x, z, color='red', lw=3)

plt.show()

# ** See if you can resize the plot by adding the figsize() argument in plt.subplots() are copying and pasting your previous code.**

fig, axes = plt.subplots(nrows=1, ncols=2, figsize=(10, 2))
axes[0].plot(x, y, color='blue', lw=3)
axes[1].plot(x, z, color='red', lw=3, ls="--")

plt.show()
