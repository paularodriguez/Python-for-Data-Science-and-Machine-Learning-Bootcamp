# Import pandas, numpy, matplotlib,and seaborn.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Utils to see all dataframe columns
desired_width = 320
pd.set_option('display.width', desired_width)
pd.set_option('display.max_columns', 100)


def separator():
    print('-' * 20)


## Get the Data

# We'll work with the Ecommerce Customers csv file from the company. It has Customer info, suchas Email, Address, and their color Avatar. Then it also has numerical value columns:
#
# * Avg. Session Length: Average session of in-store style advice sessions.
# * Time on App: Average time spent on App in minutes
# * Time on Website: Average time spent on Website in minutes
# * Length of Membership: How many years the customer has been a member.

# Read in the Ecommerce Customers csv file as a DataFrame called customers.

customers = pd.read_csv('Ecommerce Customers')

# Check the head of customers, and check out its info() and describe() methods.

print(customers.head())

#                            Email                                            Address            Avatar  Avg. Session Length  Time on App  Time on Website  Length of Membership  Yearly Amount Spent
# 0      mstephenson@fernandez.com       835 Frank Tunnel\nWrightmouth, MI 82180-9605            Violet            34.497268    12.655651        39.577668              4.082621           587.951054
# 1              hduke@hotmail.com     4547 Archer Common\nDiazchester, CA 06566-8576         DarkGreen            31.926272    11.109461        37.268959              2.664034           392.204933
# 2               pallen@yahoo.com  24645 Valerie Unions Suite 582\nCobbborough, D...            Bisque            33.000915    11.330278        37.110597              4.104543           487.547505
# 3        riverarebecca@gmail.com   1414 David Throughway\nPort Jason, OH 22070-1220       SaddleBrown            34.305557    13.717514        36.721283              3.120179           581.852344
# 4  mstephens@davidson-herman.com  14023 Rodriguez Passage\nPort Jacobville, PR 3...  MediumAquaMarine            33.330673    12.795189        37.536653              4.446308           599.406092
separator()

print(customers.info())

# <class 'pandas.core.frame.DataFrame'>
# RangeIndex: 500 entries, 0 to 499
# Data columns (total 8 columns):
# Email                   500 non-null object
# Address                 500 non-null object
# Avatar                  500 non-null object
# Avg. Session Length     500 non-null float64
# Time on App             500 non-null float64
# Time on Website         500 non-null float64
# Length of Membership    500 non-null float64
# Yearly Amount Spent     500 non-null float64
# dtypes: float64(5), object(3)
# memory usage: 31.4+ KB
# None
separator()

print(customers.describe())

# Avg. Session Length  Time on App  Time on Website  Length of Membership  Yearly Amount Spent
# count           500.000000   500.000000       500.000000            500.000000           500.000000
# mean             33.053194    12.052488        37.060445              3.533462           499.314038
# std               0.992563     0.994216         1.010489              0.999278            79.314782
# min              29.532429     8.508152        33.913847              0.269901           256.670582
# 25%              32.341822    11.388153        36.349257              2.930450           445.038277
# 50%              33.082008    11.983231        37.069367              3.533975           498.887875
# 75%              33.711985    12.753850        37.716432              4.126502           549.313828
# max              36.139662    15.126994        40.005182              6.922689           765.518462
separator()

## Exploratory Data Analysis

# Use seaborn to create a jointplot to compare the Time on Website and Yearly Amount Spent columns.
# Does the correlation make sense

sns.jointplot(customers['Time on Website'], customers['Yearly Amount Spent'])
plt.show()

# Do the same but with the Time on App column instead

sns.jointplot(customers['Time on App'], customers['Yearly Amount Spent'])
plt.show()

# Use jointplot to create a 2D hex bin plot comparing Time on App and Length of Membership

sns.jointplot(customers['Time on App'], customers['Length of Membership'], kind='hex')
plt.show()

# Let's explore these types of relationships across the entire data set.
# Use pairplot to recreate the plot below.(Don't worry about the the colors)

sns.pairplot(customers)
plt.show()

# Based off this plot what looks to be the most correlated feature with Yearly Amount Spent?

# - Length of Membership

# Create a linear model plot (using seaborn's lmplot) of  Yearly Amount Spent vs. Length of Membership

sns.lmplot(x='Yearly Amount Spent', y='Length of Membership', data=customers)
plt.show()