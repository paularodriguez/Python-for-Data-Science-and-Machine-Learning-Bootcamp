import seaborn as sns
import matplotlib.pyplot as plt

from sklearn.datasets import make_blobs

# Generate mocked dataset using make_blobs
# make_blobs generates groups of data with the given features
data = make_blobs(n_samples=200, n_features=2, centers=4, cluster_std=1.8, random_state=101)

print(data[0].shape)
# (200, 2)

plt.scatter(data[0][:, 0], data[0][:, 1], c=data[1], cmap='rainbow')
plt.show()

from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=4)
kmeans.fit(data[0])

print(kmeans.cluster_centers_)

# [[-4.13591321  7.95389851]
#  [-9.46941837 -6.56081545]
#  [ 3.71749226  7.01388735]
#  [-0.0123077   2.13407664]]

print(kmeans.labels_)

# [3 2 1 2 2 0 2 1 2 1 3 1 2 2 3 1 2 1 0 3 0 1 1 0 3 0 0 1 2 2 3 0 2 1 1 3 0
#  0 0 1 0 3 3 3 1 2 3 1 0 1 1 3 2 1 0 3 1 1 3 2 0 2 0 3 2 1 0 2 2 0 2 1 0 1
#  0 2 2 1 3 1 1 0 2 0 1 1 1 3 1 0 0 0 0 1 1 0 2 3 0 2 1 0 1 1 2 1 0 2 0 0 2
#  3 3 2 0 2 3 3 2 3 1 3 1 3 1 2 3 1 0 3 3 3 1 0 0 3 2 3 2 1 0 2 0 3 3 2 1 0
#  3 3 3 3 1 2 1 3 2 2 2 1 2 1 1 3 0 3 1 2 3 1 2 1 3 2 1 3 2 2 0 2 3 0 0 3 0
#  0 0 0 0 1 0 2 2 3 0 1 2 2 0 1]

# Compare kmeans with original dataset

f, (ax1, ax2) = plt.subplots(1, 2, sharey=True, figsize=(10, 6))

ax1.set_title('K Means')
ax1.scatter(data[0][:, 0], data[0][:, 1], c=kmeans.labels_, cmap='rainbow')

ax2.set_title("Original")
ax2.scatter(data[0][:, 0], data[0][:, 1], c=data[1], cmap='rainbow')

plt.show()
