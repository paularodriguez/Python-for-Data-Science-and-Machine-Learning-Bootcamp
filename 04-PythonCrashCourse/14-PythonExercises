# What is 7 to the power of 4?

print(7 ** 4)

# Split this string into a list

s = "Hi there Sam!"

print(s.split())

# Given the variables:
#
#     planet = "Earth"
#     diameter = 12742
#
# Use .format() to print the following string:
#
#     The diameter of Earth is 12742 kilometers.

planet = "Earth"
diameter = 12742

string = "The diameter of {planet} is {diameter} kilometres".format(planet=planet, diameter=diameter)
print(string)

# Given this nested list, use indexing to grab the word "hello"

lst = [1, 2, [3, 4], [5, [100, 200, ['hello']], 23, 11], 1, 7]

print(lst[3][1][2][0])

#  Given this nested dictionary grab the word "hello". Be prepared, this will be annoying/tricky

d = {'k1': [1, 2, 3, {'tricky': ['oh', 'man', 'inception', {'target': [1, 2, 3, 'hello']}]}]}

print(d['k1'][3]['tricky'][3]['target'][3])


#  What is the main difference between a tuple and a list?

# Tuple is immutable

#  Create a function that grabs the email website domain from a string in the form:
# user@domain.com
# So for example, passing "user@domain.com" would return: domain.com

def domainGet(email):
    index = email.index('@')
    return email[index + 1:]


# Another way

# def domainGet(email):
#     return email.split('@')[-1]

domain = domainGet("paula@gmail.com")
print(domain)


# Create a basic function that returns True if the word 'dog' is contained in the input string.
# Don't worry about edge cases like a punctuation being attached to the word dog, but do account for capitalization.

# One way

# def findDog(string):
#     return string.lower().count('dog') > 0

# Another way

def findDog(string):
    return 'dog' in string.lower().split()


val = findDog('Is there a dog here?')
print("Is there a dog here?: ", val)


# Create a function that counts the number of times the word "dog" occurs in a string. Again ignore edge cases.

def countDog(string):
    return string.lower().count('dog')


val = countDog('This dog runs faster than the other dog dude!')
print("CountDog: ", val)

# Use lambda expressions and the filter() function to filter out words
# from a list that don't start with the letter 's'. For example:
#
# seq = ['soup','dog','salad','cat','great']
# should be filtered down to:
#
# ['soup','salad']

seq = ["soup", "dog", "salad", "cat", "great"]
result = list(filter(lambda word: word[0] == 's', seq))
print(result)


### Final Problem
# You are driving a little too fast, and a police officer stops you. Write a function
# to return one of 3 possible results: "No ticket", "Small ticket", or "Big Ticket".
# If your speed is 60 or less, the result is "No Ticket". If speed is between 61
# and 80 inclusive, the result is "Small Ticket". If speed is 81 or more, the result is "Big Ticket".
# Unless it is your birthday (encoded as a boolean value in the parameters of the function) --
# on your birthday, your speed can be 5 higher in all cases.

def caught_speeding(speed, is_birthday):
    # Python ternary operator
    speed = speed - 5 if is_birthday else speed;

    if speed <= 60:
        return "No ticket"
    elif 60 < speed <= 80:
        return "Small ticket"
    else:
        return "Big Ticket"


ticket = caught_speeding(81, True)
print(ticket)

ticket = caught_speeding(81, False)
print(ticket)
