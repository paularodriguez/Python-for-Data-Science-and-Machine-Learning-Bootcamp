import numpy as np
import pandas as pd

from numpy.random import randn

# Makes the random numbers predictable
# With the seed reset (every time), the same set of numbers will appear every time.
# If the random seed is not reset, different numbers appear with every invocation:

np.random.seed(101)
print(np.random.randn(5, 4))

# A dataframe is a bunch of series

# Data, Index, Columns
df = pd.DataFrame(randn(5, 4), ['A', 'B', 'C', 'D', 'E'], ['W', 'X', 'Y', 'Z'])

# One column is like one serie
print(df['W'])

# Type is Series
print(type(df['W']))

# Another selection way (not recommended because it can be confused with methods)
print(df.W)

# Get multiple columns
print("Columns W and Z: \n", df[['W', 'Z']])

# Create new columns
df['new'] = df['W'] + df['Y']
print(df)

# Drop columns
# Default axis is 0 (labels), to drop by columns we should specify the Y axis

# Error
# df.drop('new')

# By default is doens't update the dataframe
updated_df = df.drop('new', axis=1)
print(updated_df)

# We should specify it
df.drop('new', axis=1, inplace=True)
print(df)

# We can also drop rows

df.drop('E')
print(df)

# 0 index are rows and 1 index are columns
print(df.shape)

# Selecting rows

# First way, by label
print(df.loc['A'])

# Second way, by passing an index
print(df.iloc[0])

# Selecting a one row - column
# Row 3, column Y
print(df.loc['B', 'Y'])

# Subset columns - rows
# A, B rows, W, Y columns
print(df.loc[['A', 'B'], ['W', 'Y']])
