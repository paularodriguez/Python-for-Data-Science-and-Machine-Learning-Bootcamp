import numpy as np
import pandas as pd

df = pd.DataFrame({'col1': [1, 2, 3, 4],
                   'col2': [444, 555, 666, 444],
                   'col3': ['abc', 'def', 'ghi', 'xyz']})

print(df)

# Find unique values of column
print(df['col2'].unique())

# [444 555 666]

# Get the number of unique values of column
print(df['col2'].nunique())

# 3

# Get the number of occurrences of each value
print(df['col2'].value_counts())

# 444    2
# 555    1
# 666    1
# Name: col2, dtype: int64


# Conditional selecting
print(df[df['col1'] > 2])


#    col1  col2 col3
# 2     3   666  ghi
# 3     4   444  xyz


# Apply function: Applies a custom function over each element

def times2(x):
    return x * 2


print(df['col1'].apply(times2))

# 0     888
# 1    1110
# 2    1332
# 3     888

# The same but using lambda expressions

print(df['col1'].apply(lambda x: x * 2))

# Get column names
print(df.columns)

# Index(['col1', 'col2', 'col3'], dtype='object')

# Get index names
print(df.index)

# RangeIndex(start=0, stop=4, step=1)


# Sorting dataframes:  The indexes don't change
print(df.sort_values("col2"))

#    col1  col2 col3
# 0     1   444  abc
# 3     4   444  xyz
# 1     2   555  def
# 2     3   666  ghi

# Find null values
print(df.isnull())

# Returns a dataframe of booleans that indicates if the value was noll

#     col1   col2   col3
# 0  False  False  False
# 1  False  False  False
# 2  False  False  False
# 3  False  False  False

# Pivot table
data = {'A': ['foo', 'foo', 'foo', 'bar', 'bar', 'bar'],
        'B': ['one', 'one', 'two', 'two', 'one', 'one'],
        'C': ['x', 'y', 'x', 'y', 'x', 'y'],
        'D': [1, 3, 2, 5, 4, 1]}

df = pd.DataFrame(data)
print(df)

#      A    B  C  D
# 0  foo  one  x  1
# 1  foo  one  y  3
# 2  foo  two  x  2
# 3  bar  two  y  5
# 4  bar  one  x  4
# 5  bar  one  y  1

pivotTable = df.pivot_table(values='D', index=['A', 'B'], columns=['C'])
print(pivotTable)

# C          x    y
# A   B
# bar one  4.0  1.0
#     two  NaN  5.0
# foo one  1.0  3.0
#     two  2.0  NaN